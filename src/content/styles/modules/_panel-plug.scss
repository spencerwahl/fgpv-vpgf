// panel plugs are containers for panels; they are mostly used for positioning and cropping of during animations if the panel spawns not from the edge of the viewer container
// $from indicates direction from which the panel starts moving during activaation animation
@mixin active-panel-plug($left: auto, $right: auto, $bottom: auto, $top: auto, $width: auto, $height: auto, $from: null) {

        position: absolute;
        left: $left;
        top: $top;
        bottom: $bottom;
        right: $right;
        width: $width;
        height: $height;

        // in active state, panel takes up all space in the container plug
        .panel {
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            position: absolute;
            background-color: white;
        }

        @if $from != null {
            @include active-panel-plug-transition($left: $left, $right: $right, $bottom: $bottom, $top: $top, $width: $width, $height: $height, $from: $from);
        }
    
}

// during transtion, container plug expands to accomodate panel's shadow; otherwise, it will be cropped
// it doesn't not expand in the direction the panel is animated from to crop it;
@mixin active-panel-plug-transition($left: auto, $right: auto, $bottom: auto, $top: auto, $width: auto, $height: auto, $from: top) {
    $buffer: 10px;
    $topBuffer: $buffer;
    $bottomBuffer: $buffer;
    $leftBuffer: $buffer;
    $rightBuffer: $buffer;

    @if $from == top {
        $topBuffer: 0;
    }

    @if $from == bottom {
        $bottomBuffer: 0;
    }

    @if $from == left {
        $leftBuffer: 0;
    }

    @if $from == right {
        $rightBuffer: 0;
    }

    &.ng-animate {
        overflow: hidden; // crops the panel only during animation
        $left: if($left != auto, $left - $leftBuffer, $left);
        $right: if($right != auto, $right - $rightBuffer, $right);
        $top: if($top != auto, $top - $topBuffer, $top);
        $bottom: if($bottom != auto, $bottom - $bottomBuffer, $bottom);

        @if $width != auto {
            $width: $width + $leftBuffer + $rightBuffer;
        }

        @if $height != auto {
            $height: $height + $leftBuffer + $rightBuffer;
        }

        height: $height;
        width: $width;
        left: $left;
        right: $right;
        top: $top;
        bottom: $bottom;

        .panel {
            // set magins on the panel so it stays the same exact size regardless of the expanded plug container
            margin: {
                left: $leftBuffer;
                right: $rightBuffer;
                top: $topBuffer;
                bottom: $bottomBuffer;
            }
        }
    }
}
