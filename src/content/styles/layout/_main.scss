rv-appbar {
    position: absolute;
    transition: opacity $swift-ease-in-duration $swift-ease-in-out-timing-function;

    height: $toolbar-height;
    pointer-events: none;

    display: flex;

    z-index: 11;

    @include include-size(rv-gt-sm) {
        width: $toolbar-width;
        left: $viewport-gutter;
        top: $viewport-gutter;
    }

    @include include-size(rv-sm) {
        width: 100%;
    }
}

// we use pointers-events to make click event pass through parent div. If it creates problem go with this solution:
// position toast relatively, set the app container to flexbox, and align toast using justify-content and align-items.
md-toast {
    &.md-rv-flex-global {
        display: flex;
        width: 100%;
        justify-content: center;
    }

    pointer-events: none;

    .md-toast-text {
        padding-top: rem(1.4);
        padding-bottom: rem(1.4);
        flex-basis: auto;
    }

    .md-toast-content {
        pointer-events: auto;

        > button {
            flex-shrink: 0; // prevents the button from shrinking when the toast text is long
        }
    }
}

rv-panel {
    opacity: 1;
    transition: opacity $swift-ease-in-duration $swift-ease-in-out-timing-function;

    md-toast.md-rv-flex {
        width: 100%;
        padding: {
            left: 0;
            right: 0;
            bottom: 0;
        }
    }

    @include include-size(rv-lt-lg) {
        &.zoomto-transparent {
            opacity: 0.14;
        }
    }
}

// reduces the size of buttons to conform better with the inline text around them,
// as is the case with the focus manager dialog
div.sm-button {
    line-height: 20px;
    min-height: 20px;
    min-width: 65px;
}

div[type='table'] {

    @include include-size(rv-sm) {
        &.default, &.full, &.attached {
            @include active-panel-plug($left: 0, $top: 0, $right: 0, $bottom: 0, $width: 100%, $from: right);
            z-index: 13;
        }
    }

    @include include-size(rv-md) {
        &.default, &.full, &.attached {
            @include active-panel-plug($left: $viewport-gutter - 2, $top: $viewport-gutter - 2, $right: $viewport-gutter - 2, $bottom: $viewport-gutter - 2, $from: right);
            z-index: 13;
        }
    }

    @include include-size(rv-lg) {
        &.default {
            @include active-panel-plug($left: $viewport-gutter * 2 + $toolbar-width, $top: $viewport-gutter, $right: $viewport-gutter, $bottom: 50%);
            z-index: 13;
        }

        &.full {
            @include active-panel-plug($left: $viewport-gutter * 2 + $toolbar-width, $top: $viewport-gutter, $right: $viewport-gutter, $bottom: $viewport-gutter);
            z-index: 13;
        }

        &.attached {
            @include active-panel-plug($left: $viewport-gutter + $toolbar-width, $top: $viewport-gutter + $toolbar-height + 1, $width: 300px, $bottom: $viewport-gutter);

            &:before {
                content: "";
                position: absolute;
                top: 0;
                left: 0;
                bottom: 0;
                width: 1px;
                border-left: 1px solid $divider-color;
                z-index: 11;
            }

            &.ng-animate {
                &:before {
                    bottom: 10px;
                }
            }
        }
    }

    &.minimized {
        @include active-panel-plug($left: $viewport-gutter * 2 + $toolbar-width, $top: $viewport-gutter, $right: $viewport-gutter, $height: 100px);
    }

    rv-table-default {
        @include content-plug;
    }
}

rv-panel[type='main'] {

    @include include-size(rv-gt-sm) {
        @include active-panel-plug($left: $viewport-gutter, $top: $viewport-gutter + $toolbar-height + 1, $bottom: $viewport-gutter, $width: $toolbar-width, $from: top);
    }

    @include include-size(rv-sm) {
        @include active-panel-plug($left: 0, $top: $toolbar-height + 1, $bottom: 0, $width: 100%, $from: top);
        z-index: 11;
    }

    &.rv-no-appbar {
        @include include-size(rv-gt-sm) {
            @include active-panel-plug($left: $viewport-gutter, $top: $viewport-gutter + 1, $bottom: $viewport-gutter, $width: $toolbar-width, $from: top);
        }

        @include include-size(rv-sm) {
            @include active-panel-plug($left: 0, $top: 1px, $bottom: 0, $width: 100%, $from: top);
            z-index: 11;
        }

        // when there is no appbar, we still need to offset geosearch results, so it doesn't overlap with geosearch bar
        &.geosearch {
            @include include-size(rv-gt-sm) {
                top: $viewport-gutter + $toolbar-height + 1;
            }

            @include include-size(rv-sm) {
                top: $toolbar-height + 1;
            }
        }

        &:before {
            border-top: none;
        }
    }

    &:before {
        content: "";
        position: absolute;
        top: -1px;
        left: 0;
        right: 0;
        height: 1px;
        z-index: 11;
        border-top: 1px solid $divider-color;
    }

    &.ng-animate {
        &:before {
            left: 10px;
            right: 10px;
        }
    }

    &.geosearch {
        pointer-events: none;

        .rv-panel {
            background: transparent !important;

            > * {
                // without pointer events, newly generated or updated tooltips don't have a place to attach to and they end up attached to the edges of the parent container
                pointer-events: all;
            }

            &:after {
                box-shadow: none !important;
            }
        }
    }

    rv-toc {
        @include content-plug;
    }
}

rv-panel[type='side'] {

    @include include-size(rv-sm) {
        @include active-panel-plug($left: 0, $top: 0, $bottom: 0, $width: 100%, $from: right);
        z-index: 12;
    }

    @include include-size(rv-md) {
        @include active-panel-plug($left: $viewport-gutter, $top: $viewport-gutter, $bottom: $viewport-gutter, $width: $toolbar-width, $from: left);
        z-index: 12;
    }

    @include include-size(rv-lg) {
        @include active-panel-plug($left: $viewport-gutter + $toolbar-width, $top: $viewport-gutter, $bottom: $viewport-gutter, $width: $side-panel-width, $from: left);
        z-index: 10;
    }

    &:before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: 1px;
        z-index: 11;

        @include include-size(rv-gt-sm) {
            border-left: 1px solid $divider-color;
        }
    }

    &.ng-animate {
        &:before {
            top: $viewport-gutter;
            bottom: $viewport-gutter;
        }
    }

    rv-settings,
    rv-metadata-panel {
        @include content-plug;
    }
}

rv-panel[type='other'] {
    @include active-panel-plug($right: 0, $top: 0, $bottom: 0, $width: 300px, $from: right);

    .rv-panel {
        //background-color: rgba(0,0,0,0.68);
        background-color: rgba(#fff,.68);
        //color: white;
    }
}

md-content {
    background-color: #fff;
}
